@function rem($px) {
    @return $px/100px + rem
};
@function pc($px){
    @return $px/750px * '100%'
}

@function px2rem($px, $base-font-size: 75px) {
    @if (unitless($px)) {
        @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels for you";
        @return px2rem($px + 0px); // That may fail.
    } @else if (unit($px) == rem) {
        @return $px;
    }
    @return ($px / $base-font-size) * 1rem;
}

@mixin font-dpr($font-size){
    font-size: $font-size;
    [data-dpr="2"] & {
        font-size: $font-size * 2;
    }
    [data-dpr="3"] & {
        font-size: $font-size * 3;
    }
}

@mixin c-green {
    color: #23cd77;
}
@mixin bg-green {
    background-color: #23cd77;
}

@mixin break {
    word-break: break-all;
    word-wrap: break-word;
}

@mixin noBreak{
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin tabMargin {
    margin-bottom: rem(21px);
    background-color: #fff;
}

@mixin playInfoFont {
    padding: rem(16px) rem(19px) rem(21px) rem(19px);
}

@mixin maxImg {
    max-width: 100%;
    height: 100%;
    display: block;
    margin: auto;
}

@mixin disFlex {
    display: box;
    display: flex;
}

@mixin flex($compony) {
    flex: $compony;
}

@mixin border {
    content: ' ';
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    width: 200%;
    height: 200%;
    transform: scale(0.5);
    transform-origin: left top;
};

@mixin ellicpsis {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}

%flex {
    display: -webkit-flex;
    display: -webkit-box;
    display: flex;
}
%fl {
    float: left;
}
%fr {
    float: right;
}

%border{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    &::after {
        z-index: 11;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-top:1px solid #ddd;
            border-bottom:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-top:1px solid #ddd;
            border-bottom:1px solid #ddd;
        }
    }
}
%border-top{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    &::after {
        z-index: 11;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-top:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-top:1px solid #ddd;
        }
    }
}
%border-bottom{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    &::after {
        z-index: 11;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-bottom:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-bottom:1px solid #ddd;
        }
    }
}
%border-left{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    &::after {
        z-index: 11;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-bottom:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-bottom:1px solid #ddd;
        }
    }
}
%border-right{
    position: relative;
    background:#fff;
    &>*{
        position: relative;
        z-index:10;
    }
    @media (-webkit-min-device-pixel-ratio:2){
        &::after{
            @include border;
            border-bottom:1px solid #ddd;
        }
    }
    @media (-webkit-min-device-pixel-ratio:1){
        &::after{
            border-bottom:1px solid #ddd;
        }
    }
}

@mixin _prefixDpr($width: 1px, $position: all, $color: #ddd, $radius: 0, $style: solid,  $dpr: 2) {
  @media only screen and (-webkit-min-device-pixel-ratio:$dpr) {
      &:after {
          content: ' ';
          position: absolute;
          top: 0;
          left: 0;
          box-sizing: border-box;
          width: $dpr * 100%;
          height: $dpr * 100%;
          transform: scale(1/$dpr);
          transform-origin: left top;
          @if $position == all {
              border: $width $style $color;
          } @else {
              border-#{$position}: $width $style $color;
          }
          border-radius: $radius * 2;
          pointer-events: none;
      }
  }
}

@mixin border($position: all, $color: #ddd, $width: 1px,  $radius: 0, $style: solid) {
    position: relative;
    border-radius: $radius;
    @include _prefixDpr($width, $position, $color, $radius, $style, 1);
    @include _prefixDpr($width, $position, $color, $radius, $style, 1.5);
    @include _prefixDpr($width, $position, $color, $radius, $style, 2);
    @include _prefixDpr($width, $position, $color, $radius, $style, 3);
}
